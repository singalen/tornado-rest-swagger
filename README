
Installing
----------

1. ??? Install Swagger-UI libraries into /assets/lib/
2. If you're initializing your Tornado application like

    class MyApplication(tornado.web.Application):
        def __init__(self):
            handlers = [
                (r'/user/', UserHandler),
                ...
            ]
            settings = dict(debug="True")
            tornado.web.Application.__init__(self, handlers, **settings)

then add Swagger handlers like

    swagger_handlers = tornado_rest_swagger.urls.handle_apidoc_urls(r'/swagger', **settings)
    tornado.web.Application.__init__(self, handlers + swagger_handlers, **settings)

Documenting API methods
-----------------------

Write a docstrting in [epytext](http://epydoc.sourceforge.net/epytext.html) format like:

    """
    Updates a user.

    @type user: my.package.models.UserModel
    @param user: The user JSON to be updated
    @rtype: my.package.models.UserModel

    """
Full tag list is:
* @paramtype <name>: <http-parameter-type> (defaults to 'path', I can think of 'body' and 'header'; might be arbitrary string)
* @type <name>: <dataType> (where dataType is a FQN like my.package.models.DeviceModel or a str/int/bool)
* @param <name>: <description>
    bug: @type and @paramtype should go BEFORE a @param.
* @rtype <return type>
* @raisetype <error code>: <return type with the given code> (Apparently not supported by swagger-ui yet)
* @raise <error code>: <error reason>
    bug: @raisetype should go BEFORE a @raise.
* @note: <note>
* @summary: <summary>
